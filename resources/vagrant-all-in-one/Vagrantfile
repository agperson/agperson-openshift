ENV.store('VAGRANT_DEFAULT_PROVIDER', '{{ parameters.VagrantBackend|default("virtualbox") }}' )

Vagrant.configure('2') do |config|
  config.vm.box     = '{{ parameters.BoxName }}'
  config.vm.box_url = '{{ parameters.BoxUrl }}'
  # Vagrant 1.2.3 bug -- private networking does not work with explicity guest
  # set to "linux"
  #config.vm.guest   = '{{ parameters.GuestType|default("linux") }}'.to_sym

  config.vm.hostname = '{{ parameters.Role }}.local'

  # Assign a static private IP (172.16.0.0/12 will never be routed)
  config.vm.network :private_network, ip: '{{ parameters.VagrantStaticIp|default("172.16.10.10") }}'

  # Set default RAM for VirtualBox
  config.vm.provider :virtualbox do |vbox|
    vbox.customize ['modifyvm', :id, '--memory', '1024']
  end

  # Mount a shared folder containing the cloudlet's data files
  config.vm.synced_folder 'payload', '{{ parameters.NephoPayloadDir }}'

  # Call Nepho provisioning scripts if they exist and are executable
  ['bootstrap', 'configure', 'deploy'].each do |f|
    h_path = File.join('payload', 'hooks', f)
    i_path = File.join('{{ parameters.NephoPayloadDir }}', 'hooks', f)
    if File.exists?(h_path) then
      config.vm.provision :shell, :inline => <<-SCRIPT
        {%- for k, v in env_vars().items() %}
        export NEPHO_{{k}}='{{v}}'
        {%- endfor %}
        echo -e "\033[0;33mRunning hook #{f} (#{i_path})\033[0m"
        #{i_path}
      SCRIPT
    end
  end
end

# vi: set ft=ruby :
